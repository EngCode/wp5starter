(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class GeocodingRepository{static async geoCodeAddress(e){const o=new google.maps.Geocoder;if("object"==typeof e)return new Promise((t,s)=>{o.geocode(e,(e,o)=>"OK"===o?t(e):s(o))});throw new Error("Location should be an object")}}exports.default=GeocodingRepository;

},{}],2:[function(require,module,exports){
"use strict";var _wpSeoLocalGeocodingRepository=require("./wp-seo-local-geocoding-repository.js"),_wpSeoLocalGeocodingRepository2=_interopRequireDefault(_wpSeoLocalGeocodingRepository),_wpSeoLocalTimezoneRepository=require("./wp-seo-local-timezone-repository.js"),_wpSeoLocalTimezoneRepository2=_interopRequireDefault(_wpSeoLocalTimezoneRepository);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}class Locations{constructor(){this.addressFields=[document.querySelector(".wpseo_local_address_input"),document.querySelector(".wpseo_local_zipcode_input"),document.querySelector(".wpseo_local_city_input"),document.querySelector(".wpseo_local_state_input"),document.querySelector('.select[id*="_country"]')],this.latLngSettingsContainer=document.getElementById("location-coordinates-settings"),this.latLngSettingsFieldWrapper=document.getElementById("location-coordinates-settings-lat-lng-wrapper"),this.calculateLatLngButton=document.getElementById("calculate_lat_lng_button"),this.latField=document.querySelector(".wpseo_local_lat_input"),this.lngField=document.querySelector(".wpseo_local_lng_input"),this.timezoneField=document.querySelector('select[id*="_timezone"]'),this.apiKey=wpseoLocalLocations.apiKey,this.maybeGeoCodeAddress=this.maybeGeoCodeAddress.bind(this),this.maybeShowAddressChangesNotification=this.maybeShowAddressChangesNotification.bind(this),this.setTimezone=this.setTimezone.bind(this),this.formatAddress=this.formatAddress.bind(this)}addEventListeners(){document.addEventListener("click",this.maybeGeoCodeAddress),document.addEventListener("change",this.maybeShowAddressChangesNotification)}async maybeGeoCodeAddress(e){if(null!==this.latField&&null!==this.lngField&&(this.calculateLatLngNotification=document.querySelector(".yoast-seo-local__alert"),this.calculateLatLngButton===e.target)){e.preventDefault(),this.errorField=document.querySelector(".wpseo_local_geocoding_error");const t=this.latField.value,o=this.lngField.value,i=this.formatAddress();null!==this.errorField&&this.errorField.parentNode.removeChild(this.errorField),this.latField.value="",this.lngField.value="";const a=document.createElement("div");try{const e=await _wpSeoLocalGeocodingRepository2.default.geoCodeAddress({address:i});this.latField.value=e[0].geometry.location.lat(),this.lngField.value=e[0].geometry.location.lng(),null!==this.calculateLatLngNotification&&this.calculateLatLngNotification.parentNode.removeChild(this.calculateLatLngNotification),a.innerHTML=wpseoLocalLocations.calculateLatLngSuccessMessage,this.latLngSettingsContainer.insertBefore(a,this.latLngSettingsFieldWrapper),(""!==this.latField.value&&""!==this.lngField.value&&this.latField.value!==t||this.lngField.value!==o)&&this.setTimezone()}catch(e){const t=document.createElement("p");switch(t.classList.add("wpseo_local_geocoding_error"),null!==this.calculateLatLngNotification&&this.calculateLatLngNotification.parentNode.removeChild(this.calculateLatLngNotification),a.innerHTML=wpseoLocalLocations.calculateLatLngErrorMessage,this.latLngSettingsContainer.insertBefore(a,this.latLngSettingsFieldWrapper),e){case"ZERO_RESULTS":t.appendChild(document.createTextNode("We could not retrieve coordinates for this address."));break;case"OVER_QUERY_LIMIT":t.appendChild(document.createTextNode("You are over your query limit."));break;case"REQUEST_DENIED":t.appendChild(document.createTextNode("Your API key is not entered or not valid."))}}}}async maybeShowAddressChangesNotification(e){if(-1!==this.addressFields.indexOf(e.target)){this.calculateLatLngNotification=document.querySelector(".yoast-seo-local__alert"),null!==this.calculateLatLngNotification&&this.calculateLatLngNotification.parentNode.removeChild(this.calculateLatLngNotification);const e=document.createElement("div");e.innerHTML=wpseoLocalLocations.addressChangedMessage,this.latLngSettingsContainer.insertBefore(e,this.latLngSettingsFieldWrapper)}}formatAddress(){let e=[];return this.addressFields.forEach(function(t){""!==t.value&&e.push(t.value)}),e.join(", ")}async setTimezone(){const e=this.latField.value+", "+this.lngField.value;try{const t=await _wpSeoLocalTimezoneRepository2.default.getTimezone(e,this.apiKey);""!==t&&jQuery(this.timezoneField).val(t).trigger("change")}catch(e){console.log(e)}}}const locationsInstance=new Locations;locationsInstance.addEventListeners();

},{"./wp-seo-local-geocoding-repository.js":1,"./wp-seo-local-timezone-repository.js":3}],3:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class TimezoneRepository{static async getTimezone(e,t){const s=Math.floor(Date.now()/1e3),o=new URLSearchParams;o.append("location",e),o.append("timestamp",s),o.append("key",t);const n="https://maps.googleapis.com/maps/api/timezone/json?"+o;return new Promise((e,t)=>{const s=new XMLHttpRequest;s.open("GET",n),s.onload=(()=>{if(200===s.status){const o=JSON.parse(s.responseText);return"OK"===o.status?e(o.timeZoneId):t(o)}return t(s.status)}),s.send()})}}exports.default=TimezoneRepository;

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
