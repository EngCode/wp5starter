(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});class GeocodingRepository{static async geoCodeAddress(e){const o=new google.maps.Geocoder;if("object"==typeof e)return new Promise((t,s)=>{o.geocode(e,(e,o)=>"OK"===o?t(e):s(o))});throw new Error("Location should be an object")}}exports.default=GeocodingRepository;

},{}],2:[function(require,module,exports){
"use strict";var _wpSeoLocalGeocodingRepository=require("./wp-seo-local-geocoding-repository.js"),_wpSeoLocalGeocodingRepository2=_interopRequireDefault(_wpSeoLocalGeocodingRepository);function _interopRequireDefault(t){return t&&t.__esModule?t:{default:t}}class StoreLocator{constructor(){this.searchForm=document.querySelector("#wpseo-storelocator-form"),this.searchInput=document.querySelector("#wpseo-sl-search"),this.locationDetectionButton=document.querySelector(".wpseo_use_current_location"),this.locationDetectionButtonImg=document.querySelector(".wpseo_use_current_location img"),this.latField=document.querySelector("#wpseo-sl-lat"),this.lngField=document.querySelector("#wpseo-sl-lng"),this.defaultCountry=storeLocator.defaultCountry,this.latLng="",this.locationDetection=this.locationDetection.bind(this),this.getLatLng=this.getLatLng.bind(this),this.handleSubmitForm=this.handleSubmitForm.bind(this)}addEventListeners(){document.addEventListener("click",this.locationDetection),document.addEventListener("submit",this.handleSubmitForm)}async locationDetection(t){if(t.target===this.locationDetectionButton||t.target===this.locationDetectionButtonImg){const t=this.locationDetectionButton.dataset.target,e=document.querySelector("#"+t);try{this.latLng=await this.getLatLng(),this.latField.value=this.latLng.lat,this.lngField.value=this.latLng.lng}catch(t){console.log(t)}if(!this.latLng instanceof Error)try{const t=await _wpSeoLocalGeocodingRepository2.default.geoCodeAddress({location:this.latLng});e.value=t[0].formatted_address}catch(t){console.log(t)}}}async getLatLng(){return new Promise((t,e)=>{navigator.geolocation.getCurrentPosition(e=>t({lat:parseFloat(e.coords.latitude),lng:parseFloat(e.coords.longitude)}),function(t){return e(new Error("Location detection unsuccesfull"))})})}async handleSubmitForm(t){if(t.target===this.searchForm)if(t.preventDefault(),""===this.latField.value||""===this.lngField.value){document.removeEventListener("submit",this.handleSubmitForm);const t=new Promise(async(t,e)=>{let o=this.searchInput.value;""!==this.defaultCountry&&(o+=", "+this.defaultCountry);const i=await _wpSeoLocalGeocodingRepository2.default.geoCodeAddress({address:o});this.latField.value=i[0].geometry.location.lat(),this.lngField.value=i[0].geometry.location.lng(),""!==this.latField.value&&""!==this.lngField.value&&t("success")});"success"===await t&&this.searchForm.submit()}else this.searchForm.submit()}}const storeLocatorInstance=new StoreLocator;storeLocatorInstance.addEventListeners();

},{"./wp-seo-local-geocoding-repository.js":1}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
